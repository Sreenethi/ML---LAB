# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uIqnD3ZK6Xho2WMsIJHHCvJKUQPboqXR
"""

import numpy as np
a = np . array ([[1 , 2] , [3 , 4]])
b = np . ones ((2 , 2) )
sum_ab = a + b
product = np . dot (a , b )
transpose = a . T
print ( " Original Array :\ n " , a )
print ( " Ones Array :\ n " , b )
print ( " Sum :\ n " , sum_ab )
print ( " Dot Product :\ n " , product )
print ( " Transpose :\ n " , transpose )

import pandas as pd

data = {'Name': ['Alice', 'Bob', 'Charlie'],
        'Age': [25, 30, 35],
        'Score': [85, 90, 95]}
df = pd.DataFrame(data)

df['Passed'] = df['Score'] > 90
mean_score = df['Score'].mean()

print(df)
print("Average Score:", mean_score)

from scipy import stats, integrate

group1 = [22, 21, 23, 25, 30]
group2 = [25, 26, 27, 29, 32]
t_stat, p_val = stats.ttest_ind(group1, group2)

area = integrate.quad(lambda x: x**2, 0, 3)[0]

print("T-test p-value:", p_val)
print("Area under x^2 from 0 to 3:", area)

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

iris = load_iris()
X_train, X_test, y_train, y_test = train_test_split(
    iris.data, iris.target, test_size=0.3)

model = RandomForestClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)

print("Model Accuracy:", accuracy)

import matplotlib.pyplot as plt

x = [0, 1, 2, 3, 4]
y = [i**2 for i in x]

plt.plot(x, y, label='y = x^2', color='blue', marker='o')
plt.title("Simple Line Plot")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.legend()
plt.grid(True)
plt.show()